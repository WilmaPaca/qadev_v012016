D:\qadev_v012016\Wilma\Cucumber>cucumber features\FileTest.feature
*** WARNING: You must use ANSICON 1.31 or higher (https://github.com/adoxa/ansic
on/) to get coloured output on Windows
{1=>"Maria", 2=>"Pedro", 3=>"Gustavo", 4=>"Flor"}
{1=>"$50", 2=>"$100", 3=>"$200", 4=>"$200"}
Feature: File Test

  @positive_test
  Scenario: Search file                                                       #
features/FileTest.feature:4
       Let's Go scenario: Search file
      This is the Positive case for Search file
    Given I have the file name                                                #
features/FileTest.feature:5
    And I have the root for the file                                          #
features/FileTest.feature:6
    When I search "test.pdf" file with the root "D:\documentes" of the folder #
features/FileTest.feature:7
    Then I should shows the result for the file                               #
features/FileTest.feature:8
       Bye Bye it Passed

  @negative_test
  Scenario: Search file with root incorrect                                   #
features/FileTest.feature:11
       Let's Go scenario: Search file with root incorrect
    Given I have the file name                                                #
features/FileTest.feature:12
    And I have the root for the file                                          #
features/FileTest.feature:13
    When I search "test.pdf" file with the root "C:\documentes" of the folder #
features/FileTest.feature:14
    Then I should shows that the root is incorrect                            #
features/FileTest.feature:15
       Bye Bye it Passed

  @boundary_test
  Scenario: Search file in the C and D disk          # features/FileTest.feature
:18
       Let's Go scenario: Search file in the C and D disk
    Given I have the file name                       # features/FileTest.feature
:19
    And I do not have the root for the file          # features/FileTest.feature
:20
    When I search "test" file in the  "C:" disk      # features/FileTest.feature
:21
    Then I should shows the result for the file name # features/FileTest.feature
:22
       Bye Bye it Passed

3 scenarios (3 undefined)
12 steps (12 undefined)
0m0.297s

You can implement step definitions for undefined steps with these snippets:

Given(/^I have the file name$/) do
  pending # Write code here that turns the phrase above into concrete actions
end

Given(/^I have the root for the file$/) do
  pending # Write code here that turns the phrase above into concrete actions
end

When(/^I search "([^"]*)" file with the root "([^"]*)" of the folder$/) do |arg1
, arg2|
  pending # Write code here that turns the phrase above into concrete actions
end

Then(/^I should shows the result for the file$/) do
  pending # Write code here that turns the phrase above into concrete actions
end

Then(/^I should shows that the root is incorrect$/) do
  pending # Write code here that turns the phrase above into concrete actions
end

Given(/^I do not have the root for the file$/) do
  pending # Write code here that turns the phrase above into concrete actions
end

When(/^I search "([^"]*)" file in the  "([^"]*)" disk$/) do |arg1, arg2|
  pending # Write code here that turns the phrase above into concrete actions
end

Then(/^I should shows the result for the file name$/) do
  pending # Write code here that turns the phrase above into concrete actions
end


D:\qadev_v012016\Wilma\Cucumber>cucumber features\FileTest.feature
*** WARNING: You must use ANSICON 1.31 or higher (https://github.com/adoxa/ansic
on/) to get coloured output on Windows
{1=>"Maria", 2=>"Pedro", 3=>"Gustavo", 4=>"Flor"}
{1=>"$50", 2=>"$100", 3=>"$200", 4=>"$200"}
Feature: File Test

  @positive_test
  Scenario: Search file                                                       #
features/FileTest.feature:4
       Let's Go scenario: Search file
      This is the Positive case for Search file
    Given I have the file name                                                #
features/step_definitions/step_fileTest.rb:1
      TODO (Cucumber::Pending)
      ./features/step_definitions/step_fileTest.rb:2:in `/^I have the file name$
/'
      features/FileTest.feature:5:in `Given I have the file name'
    And I have the root for the file                                          #
features/step_definitions/step_fileTest.rb:5
    When I search "test.pdf" file with the root "D:\documentes" of the folder #
features/step_definitions/step_fileTest.rb:9
    Then I should shows the result for the file                               #
features/step_definitions/step_fileTest.rb:13
       Bye Bye it Passed

  @negative_test
  Scenario: Search file with root incorrect                                   #
features/FileTest.feature:11
       Let's Go scenario: Search file with root incorrect
    Given I have the file name                                                #
features/step_definitions/step_fileTest.rb:1
      TODO (Cucumber::Pending)
      ./features/step_definitions/step_fileTest.rb:2:in `/^I have the file name$
/'
      features/FileTest.feature:12:in `Given I have the file name'
    And I have the root for the file                                          #
features/step_definitions/step_fileTest.rb:5
    When I search "test.pdf" file with the root "C:\documentes" of the folder #
features/step_definitions/step_fileTest.rb:9
    Then I should shows that the root is incorrect                            #
features/step_definitions/step_fileTest.rb:17
       Bye Bye it Passed

  @boundary_test
  Scenario: Search file in the C and D disk          # features/FileTest.feature
:18
       Let's Go scenario: Search file in the C and D disk
    Given I have the file name                       # features/step_definitions
/step_fileTest.rb:1
      TODO (Cucumber::Pending)
      ./features/step_definitions/step_fileTest.rb:2:in `/^I have the file name$
/'
      features/FileTest.feature:19:in `Given I have the file name'
    And I do not have the root for the file          # features/step_definitions
/step_fileTest.rb:21
    When I search "test" file in the  "C:" disk      # features/step_definitions
/step_fileTest.rb:25
    Then I should shows the result for the file name # features/step_definitions
/step_fileTest.rb:29
       Bye Bye it Passed

3 scenarios (3 pending)
12 steps (9 skipped, 3 pending)
0m0.150s
